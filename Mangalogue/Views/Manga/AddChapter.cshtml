@model ChapterUploadViewModel

<link rel="stylesheet" href="//code.jquery.com/ui/1.13.2/themes/base/jquery-ui.css">
<script src="https://code.jquery.com/jquery-3.6.0.js"></script>
<script src="https://code.jquery.com/ui/1.13.2/jquery-ui.js"></script>

<h2 class="text-center mx-auto text-white fw-bolder">Add chapters!</h2>
<p class="fw-lighter mx-auto text-center text-white">(Drag to sort. Double clicking will remove photos)</p>
<form id="chapterForm" method="post" enctype="multipart/form-data">
    <input type="hidden" value="@Model.MangaId" asp-for="MangaId" />
    <div class="text-white">
        <label class="btn btn-danger w-25 d-block mx-auto justify-content-center text-center" for="files">Upload pages </label>
        <input id="files" type="file" style="visibility:hidden" onchange="showPreview(event)" />
    </div>
    <ul id="sortable">
    </ul>
    <button class="btn btn-primary d-block mx-auto justify-content-center text-center w-25" id="submitChapter" type="button" onclick="save()">GO!</button>
</form>

<script>
    // creates an empty array of files
    var files = [];

    // makes the submitted photos sortable
    $(function () {
        $("#sortable").sortable();
    });

    // shows the image after it has been uploaded
    function showPreview(event) {
        files.push(event.target.files[0])
        for (var i = 0; i < event.target.files.length; i++) { // if multiple images were uploaded, loop through them all

            var image = URL.createObjectURL(event.target.files[i]); // get the image from the input element

            var imagePreview = document.createElement('img');  // create an image element that will render our image in the DOM

            imagePreview.src = image; // set the elements source to the image that was just uploaded

            imagePreview.addEventListener("dblclick", removePhoto); // simple event to remove page from the array and DOM

            imagePreview.classList.add("sortablePreviewImage"); // for querying purposes

            imagePreview.style.marginInline = "10px"; // 20px gap between images (10px per side)

            imagePreview.style.cursor = "move"; // cross arrow cursor on hover

            imagePreview.style.width = "200px"; // 200px wide so you can fit many in a single row

            imagePreview.style.border = "5px solid black"; // border for aesthetics

            imagePreview.style.aspectRatio = 2 / 3; // force a 2/3 aspect ratio which is standard for Mangas

            document.getElementById('sortable').appendChild(imagePreview); // add this to our jquery sortable container

        }
    }

    // deletes the photo from the array and the DOM
    function removePhoto(event) {

        files.pop(event.target); // remove from the array

        let parent = document.getElementById("sortable");
        parent.removeChild(event.target); // remove it from our sortable container (parent in this instance)
    }

    // posts the data
    function save() {

        var formData = new FormData();
        formData.append("mangaId", @Model.MangaId); // sets the mangaId to whatever was passed in by the controller

        // gets all the images from our files array and append them to the form data
        for (let i = 0; i < files.length; i++) {
            formData.append("pages", files[i]);
        }

        $.ajax({
            url: '/Manga/AddChapter',
            type: 'POST',
            data: formData,
            cache: false,           // must be false to post files with ajax
            contentType: false,     // must be false to post files with ajax
            processData: false,     // must be false to post files with ajax
            success: () => {
                $.get('/Manga/Profile') // Go back to the User's profile
            },
            error: () => {
                $.get('/Manga/Error') // Show an Error page and ask the User to try again
            }
        });
    }
</script>